c
default_url_options
c
address.id
c
address.id
c
address.house
c
address.house
address.id
address
c
@cricketer
Cricket
cricket
a.each do |value| value end
a.each do |value|
a.house
a.id
a = address
address.class
address
object.addresses
object
c
raw error_method(@cricketer,:name)
error_method(@cricketer,:name)
error_method(@cricketer,:name).html_safe
c
d
error_method(@cricketer,:name)
c
object.errors.messages[error_field]
error_field
object.errors.messages[:error_field]
object.errors
object
c
@cricketer.errors
@cricketer
@crickete
c
d
@cricketer.errors.messages[:name]
object.errors.messages[:name]
@cricketer.errors[:name]
error_method(@cricketer,'name')
error_method(@cricketer,:name)
@cricketer.errors
c
@cricketer.errors
continue
object.errors
object.errors.any?
error_field
object
c
saved_change_to_wickets_taken?
saved_change_to_name?
Cricket.name_changed?
Cricket.wickets_taken_changed?
c
wickets_taken.nil?
c
if wickets_taken < best_bowling.to_i;
if wickets_taken < best_bowling.to_i
wickets_taken
wickets_taken = 0
wickets_taken
wickets_taken.nil?
c
wickets_taken.nil?
c
wickets_taken
wickets_taken.nil?
c
if wickets_taken < best_bowling.to_i
 wickets_taken < best_bowling.to_i
if wickets_taken < best_bowling.to_i
best_bowling.to_i
wickets_taken.nil?
wickets_taken
wickets_taken = 0
wickets_taken.nil?
wickets_taken
c
name_change_to_be_saved
name.saved_change_to_attribute?
name_saved_change_to_attribute?
self.changed
best_bowling_chang
name_changed?
self.name_changed?
self.name.methods
self.name_changed?
self.name_change?
self
c
@cricketers.exists?
@cricketers.empty?
@cricketers.nil?
@cricketers
c
cricket_params
c
@cricketer.update(cricket_params)
cricket_params
c
uploaded_file.read
 @cricketer.update(cricket_params)
cricket_params
c
@cricketer.name 
@cricketer.build
cricket_params
@cricketer = Cricket.find(params[:id])
c
self
c
self
c
self
c
self.class
self
c
self.best_bowling = self.best_bowling + " Wickets"  unless self.best_bowling.empty?  
self.best_bowling
c
self.best_bowling + " Wickets"  
self.best_bowling
c
self.best_bowling + " Wickets" 
self
c
params
c
@cricketer = Cricket.find(params[:id])
params
c
self.best_bowling
c
self.best_bowling
c
self.best_bowling.empty?
self.best_bowling.present?
self.best_bowling.exists?
self.best_bowling.exsists?
self.best_bowling.exits?
self.best_bowling.exists?
self.best_bowling.nil?
self.best_bowling
c
self.best_bowling
c
self.best_bowling
c
params.require(:cricket).permit(:name, :age, :country, :matches_played, :runs_scored, :wickets_taken, :role, :highest_score, :best_bowling, :captain, :retired,:query, :button, :authenticity_token, :controller, :action, phone_numbers: [])
params
c
params
c
params
c
params
c
cricket_params
@cricketer = Cricket.find(params[:id])
Cricket.find(params[:id])
c
@cricketer.update(cricket_params)
@cricketer
@cricketer = Cricket.find(params[:id])
Cricket.find(params[:id])
params[:id]
@cricketer
@cricketer.update(cricket_params)
cricket_params
@cricketer
c
cricket_params
c
cricket_params
c
cricket_params
c
cricket_params
c
cricket_params
c
@cricketer.update(cricket_params)
cricket_params
c
cricket_params
c
cricket_params
c
@cricketer 
@cricketer.update(cricket_params)
@cricketer = Cricket.find(params[:id])
cricket_params
c
cricket_params
cricket_params[:phone_numbers]
cricket_params[:name]
cricket_params[:phone_numbers]
cricket_params[phone_numbers]
cricket_params.phone_numbers
Cricket.first.phone_numbers = cricket_params.phone_numbers
Cricket.first.phone_numbers
Cricket.phone_numbers
cricket_params
c
@cricketer.update(cricket_params)
cricket_params
params[:cricket][:phone_numbers].split(',')
params[:cricket][:phone_numbers]
c
params[:cricket][:phone_numbers].split(',')
params[:cricket][:phone_numbers]
c
params[:cricket][:phone_numbers].split(',')
params[:cricket][:phone_numbers].split(',' 2)
params[:cricket][:phone_numbers].split(',', 2)
params[:cricket][:phone_numbers].split(',', 3)
params[:cricket][:phone_numbers]
c
@cricketer.update(cricket_params)
c
cricket_params
 cricket_params["role"] = 2
 aa cricket_params["role"] = 2
cricket_params
cricket_params["role"] = 2
cricket_params
Cricket.roles.map{|key,val| [key,key]}
Cricket.roles
params
c
cricket_path(@cricketer)
crickets_path(@cricketer)
@cricketer.save
@cricketer
c
new_cricket_path
@cricketer
c
render layout: "application
c
n
Rails.root.join('public', 'uploads', uploaded_file.original_filename)
n
params[:cricket][:picture]
c
Cricket.group(:country).count.values[j]
